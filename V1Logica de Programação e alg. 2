# -*- coding: utf-8 -*-
"""V1 Logica de Programação e Algoritmos 2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/gist/joaop0103/8a1acb6ce568440637c8670fa3c4236b/trabalho-giba.ipynb
"""

pip install qprompt

#Lista de Clientes
ListaClientes = []

#Lista de Contas
ListaContas = []

#atribuir dia atual
from datetime import date
data_atual = date.today()

#Cria a Classe Historico
class Historico:
    def __init__(self, data_abertura , lista_transacoes = ['Conta aberta dia'+str(data_atual)]):
        self._data_abertura = data_abertura
        self._lista_transacoes = []
        
    def get_data_abertura(self):
      return self._data_abertura
      
    def set_data_abertura(self, data_abertura):
      self._data_abertura = data_abertura
      
    def get_lista_transacoes(self):
      return self._lista_transacoes
    
    def set_lista_transacoes(self, lista_transacoes):
      self._lista_transacoes = lista_transacoes
      
    def add_transacao(self, transacao: str):
      self._lista_transacoes.append(transacao)
      
    def print_extrato(self):
      print(self._lista_transacoes)



#Cria a Classe Cliente
class Cliente:
  def __init__(self, Nome, CPF, Sexo):
          self._Nome = Nome
          self._CPF = CPF
          self._Sexo = Sexo
          

  def get_Nome(self):
      return self._Nome

  def set_Nome(self, Nome):
      self._Nome = Nome

  def get_CPF(self):
      return self._CPF

  def set_CPF(self, CPF):
      self._CPF = CPF

  def get_Sexo(self):
      return self._Sexo

  def set_Sexo(self, Sexo):
      self._Sexo = Sexo
  
  
      
  
    
#Cria a Classe Conta
class Conta:
    
    def __init__(self, nro_conta, cliente: Cliente, historico: Historico, saldo = 0, limite = 0 ):
          self._nro_conta = nro_conta
          self._cliente = cliente
          self._saldo = saldo
          self._limite = limite
          self._historico = historico
          

    def get_nro_conta(self):
        return self._nro_conta

    def set_nro_conta(self, nro_conta):
        self._nro_conta = nro_conta

    def get_cliente(self):
        return self._cliente

    def set_cliente(self, cliente):
        self._cliente = cliente

    def get_saldo(self):
        return self._saldo

    def set_saldo(self, saldo):
        self._saldo = saldo

    def get_limite(self):
        return self._limite

    def set_limite(self, limite):
        self._limite = limite

    def get_historico(self):
        return self._historico

    def set_historico(self, historico):
        self._historico = historico

    def deposita(self, valor):
        self._saldo = self._saldo + valor
        print('Depósito Feito com Sucesso!!')
        self._historico.add_transacao("Deposito feito no dia "+str(data_atual)+" no valor de R$"+str(valor))

    def saca(self, valor):
        if(valor > self._saldo + self._limite):
          print("Não é possivel sacar um valor maior que o Saldo + Limite")
        else:
          self._saldo = self._saldo - valor
          print('Saque Realizado com sucesso!!!')
          self._historico.add_transacao("Saque feito no dia "+str(data_atual)+"no valor de"+str(valor))
            

    def extrato(self):
        self._historico.print_extrato()

    def trasferir_para(self, destino, valor):
        if(self._saldo + self._limite) >= valor:
            self._saldo -= valor
            destino.set_saldo(destino.get_saldo() + valor)
            print("Tranferencia realizada com sucesso!!")
            self._historico.add_transacao("Transferencia feita dia " + str(data_atual)+ " no valor de R$ "+ str(valor)+" para a conta "+str(destino.get_nro_conta()))
            destino.get_historico().add_transacao("Deposito feito dia "+ str(data_atual)+ " no valor de R$"+ str(valor))
            
        else:
            print("Não foi possivel realizar a trasferencia pois o valor a ser transferido é maior que o saldo" )

import qprompt
MenuTransacoes = qprompt.Menu()
MenuTransacoes.add('1','Transferencia')
MenuTransacoes.add('2','Deposito')
MenuTransacoes.add('3','Saque')
MenuTransacoes.add('4','Extrato')

def SelecConta ():
  pass

def cria_cliente():
      
      nome = input('Digite seu Nomme:.')
      cpf = input('Digite seu CPF:.')
      sexo = input('Sexo:.')
      cliente = Cliente(nome,cpf,sexo)
      ListaClientes.append(cliente)
      print('Cliente criado com sucesso!!!')
      if qprompt.ask_yesno("Deseja Voltar ao Menu de Cadastros?", dft="y"):
        MenuCadastro.show()

def cria_conta():
      nro_conta = input('Digite o Numero da conta:.')
      cliente = nro_conta
      historico = Historico(data_atual)
      conta = Conta(nro_conta,cliente,historico)
      ListaContas.append(conta)
      print('Conta criada com sucesso!!!')
      if qprompt.ask_yesno("Deseja Voltar ao Menu de Cadastros?", dft="y"):
        MenuCadastro.show()

def pesquisa_cliente():
  print('Em Construção!!!')
  if qprompt.ask_yesno("Deseja Voltar ao Menu de Cadastros?", dft="y"):
        MenuCadastro.show()

def deleta_cliente():
  print('Em Construção!!!')
  if qprompt.ask_yesno("Deseja Voltar ao Menu de Cadastros?", dft="y"):
        MenuCadastro.show()

def pesquisa_conta():
  print('Em Construção!!!')
  if qprompt.ask_yesno("Deseja Voltar ao Menu de Cadastros?", dft="y"):
        MenuCadastro.show()

def deleta_conta():
  print('Em Construção!!!')
  if qprompt.ask_yesno("Deseja Voltar ao Menu de Cadastros?", dft="y"):
        MenuCadastro.show()

def altera_cadastros():
  print('Em Construção!!!')
  if qprompt.ask_yesno("Deseja Voltar ao Menu de Cadastros?", dft="y"):
        MenuCadastro.show()

MenuCadastro = qprompt.Menu()
MenuCadastro.add('1','Criar um Cliente',cria_cliente)
MenuCadastro.add('2','Criar uma conta',cria_conta)
MenuCadastro.add('3','Pesquisar um cliente',pesquisa_cliente)
MenuCadastro.add('4','Deletar um cliente',deleta_cliente)
MenuCadastro.add('5','Pesquisar uma conta',pesquisa_conta)
MenuCadastro.add('6','Deletar uma conta',deleta_conta)
MenuCadastro.add('7','Realizar alteraçoes',altera_cadastros)

MenuOperacoes = qprompt.Menu()
MenuOperacoes.add('1','Menu de Cadastro',MenuCadastro.show)
MenuOperacoes.add('2','Menu de Transaçoes',SelecConta)

MenuOperacoes.show()

